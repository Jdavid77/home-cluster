# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      paperless:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5
            envFrom: &envFrom
              - secretRef:
                  name: paperless-secret
        containers:
          paperless:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.16.3@sha256:5622c95b4e22c6b95d4791563d8ace03ae16e3147e2cdf2016b938dc9341d30a
            env:
              COMPOSE_PROJECT_NAME: paperless
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: "false"
              PAPERLESS_SOCIALACCOUNT_ALLOW_SIGNUPS: "true"
              PAPERLESS_OCR_LANGUAGES: por
              PAPERLESS_OCR_LANGUAGE: por
              PAPERLESS_PORT: &port 8000
              PAPERLESS_DBNAME: paperless
              PAPERLESS_REDIS: redis://dragonfly.storage.svc.cluster.local:6379
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_TIME_ZONE: ${TIMEZONE}
              PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
              PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
              PAPERLESS_OCR_USER_ARGS: '{"invalidate_digital_signatures": true}'
            envFrom: *envFrom
            resources:
              requests:
                cpu: 100m
                memory: 1239M
              limits:
                cpu: 250m
                memory: 5000M
    service:
      paperless:
        controller: *app
        ports:
          http:
            port: 8000
    route:
      main:
        enabled: true
        kind: HTTPRoute
        parentRefs:
          - kind: Gateway
            name: internal
            namespace: network
            sectionName: websecure
        hostnames:
          - paperless.${SECRET_DOMAIN}
        rules:
          - backendRefs:
              - name: *app
                port: *port
            matches:
              - path:
                  type: PathPrefix
                  value: /
    persistence:
      data:
        enabled: true
        existingClaim: paperless-data-share-pvc
        globalMounts:
          - path: /usr/src/paperless/data
      media:
        enabled: true
        existingClaim: paperless-media-share-pvc
        globalMounts:
          - path: /usr/src/paperless/media
      consume:
        enabled: true
        existingClaim: paperless-consume-share-pvc
        globalMounts:
          - path: /usr/src/paperless/consume
      export:
        enabled: true
        existingClaim: paperless-export-share-pvc
        globalMounts:
          - path: /usr/src/paperless/export

---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
    controllers:
      minio:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 1002
            runAsGroup: 100
            fsGroup: 100
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2024-05-10T01-41-38Z@sha256:7fb572d98b25502cf9c04e07aa64827dc291da8e7e55f80c80ae396fff93f639
            env:
              TZ: "${TIMEZONE}"
              MINIO_UPDATE: "off"
              MINIO_BROWSER_REDIRECT_URL: https://minio.${SECRET_DOMAIN}
              MINIO_SERVER_URL: https://s3.${SECRET_DOMAIN}
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.${SECRET_DOMAIN},https://s3.${SECRET_DOMAIN}
              MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_PROMETHEUS_URL: https://prometheus.${SECRET_DOMAIN}
              MINIO_PROMETHEUS_AUTH_TYPE: public
            envFrom:
              - secretRef:
                  name: minio-secret
            args: ["server", "/data", "--console-address", ":9001"]
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: &api-port 9000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                memory: 100Mi
                cpu: 50m
              limits:
                memory: 750Mi
    service:
      app:
        controller: minio
        ports:
          http:
            primary: true
            port: 9001
          api:
            port: *api-port
    serviceMonitor:
      app:
        serviceName: minio
        endpoints:
          - port: api
            scheme: http
            path: /minio/v2/metrics/cluster
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        className: traefik
        annotations:
          hajimari.io/icon: simple-icons:minio
          external-dns.alpha.kubernetes.io/target: ${SECRET_DOMAIN}
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts: [*host]
            secretName: ${SECRET_DOMAIN}-tls
      s3:
        className: traefik
        annotations:
          hajimari.io/enable: "false"
          external-dns.alpha.kubernetes.io/target: ${SECRET_DOMAIN}
        hosts:
          - host: &api-host s3.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: api
        tls:
          - hosts: [*api-host]
            secretName: ${SECRET_DOMAIN}-tls
    persistence:
      data:
        enabled: true
        existingClaim: minio-storage-pvc
        globalMounts:
          - path: /data

# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: pgadmin
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      pgadmin:
        pod:
          securityContext:
            runAsUser: 5050 # ${APP_UID}
            runAsGroup: 5050 # ${APP_GID}
            fsGroup: 5050 # ${APP_GID}
            fsGroupChangePolicy: OnRootMismatch
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          pgadmin:
            image:
              repository: docker.io/dpage/pgadmin4
              tag: "9.1@sha256:bdebdfc4b165c10d0ad60e58f1d7ef41af6c881c9556ae331adaa35bba6dacf3"
            envFrom:
              - secretRef:
                  name: pgadmin-secret
            resources:
              requests:
                cpu: 15m
                memory: 164M
              limits:
                memory: 236M
    service:
      pgadmin:
        controller: pgadmin
        ports:
          http:
            port: 80
    ingress:
      internal:
        enabled: true
        className: internal
        annotations:
          hajimari.io/icon: simple-icons:postgresql
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: pgadmin
                  port: http
        tls:
          - hosts: [*host]
            secretName: ${SECRET_DOMAIN}-tls
    persistence:
      config:
        enabled: true
        existingClaim: pgadmin-config
        advancedMounts:
          pgadmin:
            app:
              - path: /var/lib/pgadmin
      oauth:
        enabled: true
        type: secret
        name: pgadmin-secret-auth
        advancedMounts:
          pgadmin:
            app:
              - path: /pgadmin4/config_local.py
                subPath: config_local.py
              - path: /pgadmin4/.pgpass
                subPath: .pgpass
      server-json:
        enabled: true
        type: configMap
        name: servers-json
        globalMounts:
          - path: /pgadmin4/servers.json
            subPath: servers.json

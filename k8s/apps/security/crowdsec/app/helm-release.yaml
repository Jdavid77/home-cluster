---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: crowdsec
spec:
  interval: 30m
  chart:
    spec:
      chart: crowdsec
      version: 0.13.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: crowdsec-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    container_runtime: containerd
    tls:
      enabled: true
      bouncer:
        reflector:
          namespaces: ["network"]
    agent:
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
      # Specify each pod whose logs you want to process
      acquisition:
        # The namespace where the pod is located
        - namespace: network
          # The pod name
          podName: traefik-*
          # as in crowdsec configuration, we need to specify the program name to find a matching parser
          program: traefik
      env:
        - name: TZ
          value: ${TIMEZONE}
        - name: PARSERS
          value: "crowdsecurity/cri-logs"
        - name: COLLECTIONS
          value: >-
            crowdsecurity/traefik
            crowdsecurity/http-cve
            crowdsecurity/http-dos
            crowdsecurity/k8s-audit
            crowdsecurity/pgsql
            crowdsecurity/linux
            Dominic-Wagner/vaultwarden
        - name: LEVEL_INFO
          value: "true"

      metrics:
        enabled: true
        serviceMonitor:
          enabled: true

    lapi:

      env:
        - name: TZ
          value: ${TIMEZONE}
        - name: ENROLL_KEY
          valueFrom:
            secretKeyRef:
              name: crowdsec-secret
              key: ENROLL_KEY
        - name: ENROLL_INSTANCE_NAME
          value: k8s_cluster
        - name: ENROLL_TAGS
          value: "home-ops k8s"

      dashboard:
        enabled: false

      persistentVolume:
        data:
          enabled: true
          accessModes:
            - ReadWriteOnce
          existingClaim: lapi-data-pvc
        config:
          enabled: true
          accessModes:
            - ReadWriteOnce
          existingClaim: lapi-config-pvc

      metrics:
        enabled: true
        serviceMonitor:
          enabled: true

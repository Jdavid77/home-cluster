---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: authentik-outpost
    app.kubernetes.io/managed-by: goauthentik.io
    app.kubernetes.io/name: authentik-outpost
    app.kubernetes.io/version: 2023.8.3
  name: authentik-outpost
  namespace: security
spec:
  ports:
    - name: http
      port: 9000
      protocol: TCP
      targetPort: http
    - name: https
      port: 9443
      protocol: TCP
      targetPort: https
  type: ClusterIP
  selector:
    app.kubernetes.io/managed-by: goauthentik.io
    app.kubernetes.io/name: authentik-outpost
    app.kubernetes.io/instance: authentik-outpost
    app.kubernetes.io/version: 2023.8.3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: authentik-outpost
    app.kubernetes.io/managed-by: goauthentik.io
    app.kubernetes.io/name: authentik-outpost
    app.kubernetes.io/version: 2023.8.3
  name: authentik-outpost
  namespace: security
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: authentik-outpost
      app.kubernetes.io/managed-by: goauthentik.io
      app.kubernetes.io/name: authentik-outpost
      app.kubernetes.io/version: 2023.8.3
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: authentik-outpost
        app.kubernetes.io/managed-by: goauthentik.io
        app.kubernetes.io/name: authentik-outpost
        app.kubernetes.io/version: 2023.8.3
    spec:
      containers:
        - env:
          - name: AUTHENTIK_HOST
            valueFrom:
              secretKeyRef:
                key: authentik_host
                name: authentik-outpost-api
          - name: AUTHENTIK_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: authentik-outpost-api
          - name: AUTHENTIK_INSECURE
            valueFrom:
              secretKeyRef:
                key: authentik_host_insecure
                name: authentik-outpost-api
          image: ghcr.io/goauthentik/proxy
          name: proxy
          ports:
            - containerPort: 9000
              name: http
              protocol: TCP
            - containerPort: 9443
              name: https
              protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/proxy-buffer-size: 16k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
  labels:
    app.kubernetes.io/instance: authentik-outpost
    app.kubernetes.io/managed-by: goauthentik.io
    app.kubernetes.io/name: authentik-outpost
    app.kubernetes.io/version: 2023.8.3
  name: authentik-outpost
  namespace: security
spec:
  ingressClassName: nginx
  rules:
  - host: uptime.${SECRET_DOMAIN}
    http:
      paths:
      - backend:
          service:
            name: authentik-outpost
            port:
              name: http
        path: /outpost.goauthentik.io
        pathType: Prefix
  - host: actual.${SECRET_DOMAIN}
    http:
      paths:
      - backend:
          service:
            name: authentik-outpost
            port:
              name: http
        path: /outpost.goauthentik.io
        pathType: Prefix
  - host: calibre-web.${SECRET_DOMAIN}
    http:
      paths:
      - backend:
          service:
            name: authentik-outpost
            port:
              name: http
        path: /outpost.goauthentik.io
        pathType: Prefix
  tls:
    - hosts:
        - uptime.${SECRET_DOMAIN}
        - actual.${SECRET_DOMAIN}
        - calibre-web.${SECRET_DOMAIN}
      secretName: ${SECRET_DOMAIN}-tls



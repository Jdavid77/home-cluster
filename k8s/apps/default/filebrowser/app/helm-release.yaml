# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app filebrowser
  namespace: default
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      filebrowser:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: filebrowser/filebrowser
              tag: v2.42.5
            env:
              TZ: ${TIMEZONE}
              FB_DATABASE: /config/filebrowser.db
              FB_ROOT: /srv
              FB_LOG: stdout
              FB_NOAUTH: "true"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
        pod:
          securityContext:
            runAsUser: 1002
            runAsGroup: 100
            runAsNonRoot: true
            fsGroup: 100
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [10000]
    service:
      app:
        controller: filebrowser
        ports:
          http:
            port: *port
    route:
      main:
        enabled: true
        kind: HTTPRoute
        parentRefs:
          - kind: Gateway
            name: internal
            namespace: network
            sectionName: websecure
        hostnames:
          - files.${SECRET_DOMAIN}
        rules:
          - backendRefs:
              - name: *app
                port: *port
            matches:
              - path:
                  type: PathPrefix
                  value: /
    persistence:
      config:
        existingClaim: filebrowser
      youtube:
        type: nfs
        server: ${NFS_SERVER}
        path: /youtube
        globalMounts:
          - path: /srv/youtube
      ebooks:
        type: nfs
        server: ${NFS_SERVER}
        path: /ebooks
        globalMounts:
          - path: /srv/ebooks

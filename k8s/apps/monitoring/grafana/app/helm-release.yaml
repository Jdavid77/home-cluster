# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 8.10.1
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    annotations:
      reloader.stakater.com/auto: "true"
    rbac:
      pspEnabled: false
    # Use an existing secret for the admin user.
    admin:
      ## Name of the secret. Can be templated.
      existingSecret: grafana-admin
      userKey: GRAFANA_ADMIN_USERNAME
      passwordKey: GRAFANA_ADMIN_PASSWORD
    envFromSecrets:
      - name: grafana-secret
    grafana.ini:
      analytics:
        check_for_plugin_updates: false
        check_for_updates: false
        reporting_enabled: false
      auth:
        oauth_allow_insecure_email_lookup: true
        oauth_auto_login: false
        signout_redirect_url: "https://auth.${SECRET_DOMAIN}/application/o/grafana/end-session/"
      auth.anonymous:
        enabled: false
      auth.basic:
        enabled: true
      auth.generic_oauth:
        allow_sign_up: true
        api_url: https://auth.${SECRET_DOMAIN}/application/o/userinfo/
        auth_url: https://auth.${SECRET_DOMAIN}/application/o/authorize/
        empty_scopes: false
        enabled: true
        groups_attribute_path: groups
        icon: signin
        login_attribute_path: user
        name: Authentik
        name_attribute_path: user
        role_attribute_path: |
          contains(groups[*], 'Grafana Admin') && 'Admin' || 'Viewer'
        scopes: "openid profile email groups"
        token_url: https://auth.${SECRET_DOMAIN}/application/o/token/
        use_pkce: true
      date_formats:
        full_date: "DD.MM.YYYY hh:mm:ss"
        use_browser_locale: true
      explore:
        enabled: true
      log:
        filters: rendering:debug
      news:
        news_feed_enabled: false
      panels:
        disable_sanitize_html: true
      security:
        allow_embedding: true
        cookie_samesite: disabled
      server:
        root_url: https://grafana.${SECRET_DOMAIN}
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default-folder
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux-folder
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes-folder
          - name: prometheus
            orgId: 1
            folder: Prometheus
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/prometheus-folder
          - name: crowdsec
            orgId: 1
            folder: Crowdsec
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/crowdsec-folder
          - name: longhorn
            orgId: 1
            folder: Longhorn
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/longhorn-folder
          - name: traefik
            orgId: 1
            folder: Traefik
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/traefik-folder
          - name: dns
            orgId: 1
            folder: DNS
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/dns-folder
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - {name: Alertmanager, orgId: 1}
          - {name: Prometheus, orgId: 1}
          - {name: Loki, orgId: 1}
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
            isDefault: true
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local:80
            jsonData:
              maxLines: 250
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager-operated.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboards:
      default:
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        minio:
          # renovate: depName="MinIO Dashboard"
          gnetId: 13502
          revision: 26
          datasource:
            - {name: DS_PROMETHEUS, value: Prometheus}
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 36
          datasource: Prometheus
        cert-manager:
          gnetId: 11001
          revision: 1
          datasource: Prometheus
        speedtest-exporter:
          gnetId: 13665
          revision: 4
          datasource: Prometheus
        node-problem-detector:
          gnetId: 15549
          revision: 1
          datasource: Prometheus
        dragonfly:
          url: https://raw.githubusercontent.com/dragonflydb/dragonfly/main/tools/local/monitoring/grafana/provisioning/dashboards/dashboard.json
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
      kubernetes:
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 16
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 18
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 37
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 34
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 29
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gNetId: 15760
          revision: 21
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      prometheus:
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 3
          datasource: Prometheus
      crowdsec:
        crowdsec-engines:
          gnetId: 19010
          revision: 1
          datasource: Prometheus
        crowdsec-insight:
          gnetId: 19011
          revision: 1
          datasource: Prometheus
        crowdsec-details:
          gnetId: 19012
          revision: 1
          datasource: Prometheus
        crowdsec-local-api:
          gnetId: 19013
          revision: 1
          datasource: Prometheus
      longhorn:
        longhorn:
          gnetId: 13032
          revision: 6
          datasource: Prometheus
      traefik:
        traefik:
          gnetId: 17347
          revision: 9
          datasource: Prometheus
      dns:
        pihole:
          url: https://raw.githubusercontent.com/eko/pihole-exporter/refs/heads/master/grafana/dashboard.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - grafana-mqtt-datasource
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        hajimari.io/icon: simple-icons:grafana
        external-dns.alpha.kubernetes.io/target: ${SECRET_DOMAIN}
      hosts:
        - &host "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
          secretName: ${SECRET_DOMAIN}-tls
    persistence:
      enabled: false
    testFramework:
      enabled: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: grafana
